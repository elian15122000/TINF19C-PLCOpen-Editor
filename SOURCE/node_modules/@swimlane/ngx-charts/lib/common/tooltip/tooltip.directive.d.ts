import { EventEmitter, ViewContainerRef, Renderer2, OnDestroy } from '@angular/core';
import { PlacementTypes } from '@swimlane/ngx-charts/lib/common/tooltip/position';
import { StyleTypes } from '@swimlane/ngx-charts/lib/common/tooltip/style.type';
import { AlignmentTypes } from '@swimlane/ngx-charts/lib/common/tooltip/alignment.type';
import { ShowTypes } from '@swimlane/ngx-charts/lib/common/tooltip/show.type';
import { TooltipService } from '@swimlane/ngx-charts/lib/common/tooltip/tooltip.service';
import * as ɵngcc0 from '@angular/core';
export declare class TooltipDirective implements OnDestroy {
    private tooltipService;
    private viewContainerRef;
    private renderer;
    tooltipCssClass: string;
    tooltipTitle: string;
    tooltipAppendToBody: boolean;
    tooltipSpacing: number;
    tooltipDisabled: boolean;
    tooltipShowCaret: boolean;
    tooltipPlacement: PlacementTypes;
    tooltipAlignment: AlignmentTypes;
    tooltipType: StyleTypes;
    tooltipCloseOnClickOutside: boolean;
    tooltipCloseOnMouseLeave: boolean;
    tooltipHideTimeout: number;
    tooltipShowTimeout: number;
    tooltipTemplate: any;
    tooltipShowEvent: ShowTypes;
    tooltipContext: any;
    tooltipImmediateExit: boolean;
    show: EventEmitter<any>;
    hide: EventEmitter<any>;
    private get listensForFocus();
    private get listensForHover();
    private component;
    private timeout;
    private mouseLeaveContentEvent;
    private mouseEnterContentEvent;
    private documentClickEvent;
    constructor(tooltipService: TooltipService, viewContainerRef: ViewContainerRef, renderer: Renderer2);
    ngOnDestroy(): void;
    onFocus(): void;
    onBlur(): void;
    onMouseEnter(): void;
    onMouseLeave(target: any): void;
    onMouseClick(): void;
    showTooltip(immediate?: boolean): void;
    addHideListeners(tooltip: any): void;
    hideTooltip(immediate?: boolean): void;
    private createBoundOptions;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TooltipDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TooltipDirective, "[ngx-tooltip]", never, { "tooltipCssClass": "tooltipCssClass"; "tooltipTitle": "tooltipTitle"; "tooltipAppendToBody": "tooltipAppendToBody"; "tooltipSpacing": "tooltipSpacing"; "tooltipDisabled": "tooltipDisabled"; "tooltipShowCaret": "tooltipShowCaret"; "tooltipPlacement": "tooltipPlacement"; "tooltipAlignment": "tooltipAlignment"; "tooltipType": "tooltipType"; "tooltipCloseOnClickOutside": "tooltipCloseOnClickOutside"; "tooltipCloseOnMouseLeave": "tooltipCloseOnMouseLeave"; "tooltipHideTimeout": "tooltipHideTimeout"; "tooltipShowTimeout": "tooltipShowTimeout"; "tooltipShowEvent": "tooltipShowEvent"; "tooltipImmediateExit": "tooltipImmediateExit"; "tooltipTemplate": "tooltipTemplate"; "tooltipContext": "tooltipContext"; }, { "show": "show"; "hide": "hide"; }, never>;
}

//# sourceMappingURL=tooltip.directive.d.ts.map